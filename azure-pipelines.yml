# CI and PR triggers
trigger:
- master
- dev16.1
- feature/*
- release/*
pr:
- master
- dev16.1
- feature/*
- release/*

variables:
  - name: _TeamName
    value: FSharp
  - name: _BuildConfig
    value: Release
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - name: VisualStudioDropName
    value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)
  - ${{ if and(eq(variables['System.TeamProject'], 'public'), eq(variables['Build.Reason'], 'PullRequest')) }}:
    - name: RunningAsPullRequest
      value: true

# Variables defined in yml cannot be overridden at queue time; instead overridable variables must be defined in the web UI.
# Commenting out until something like this is supported: https://github.com/Microsoft/azure-pipelines-yaml/pull/129
#variables:
#- name: SkipTests
#  defaultValue: false

stages:
- stage: build
  displayName: Build
  jobs:

  #-------------------------------------------------------------------------------------------------------------------#
  #                                                    PR builds                                                      #
  #-------------------------------------------------------------------------------------------------------------------#
  - ${{ if eq(variables['System.TeamProject'], 'public') }}:
    - template: /eng/common/templates/jobs/jobs.yml
      parameters:
        enableMicrobuild: true
        enablePublishBuildArtifacts: true
        enablePublishTestResults: false
        enablePublishBuildAssets: true
        enablePublishUsingPipelines: $(_PublishUsingPipelines)
        enableTelemetry: true
        helixRepo: dotnet/fsharp
        jobs:

        # Source Build Linux
        - job: SourceBuild_Linux
          pool:
            vmImage: ubuntu-16.04
          steps:
          - checkout: self
            clean: true
          - script: ./eng/cibuild.sh --configuration Release /p:DotNetBuildFromSource=true /p:FSharpSourceBuild=true
            displayName: Build
          - script: dotnet build $(Build.SourcesDirectory)/eng/DumpPackageRoot/DumpPackageRoot.csproj
            displayName: Dump NuGet cache contents
            condition: failed()
          - task: PublishBuildArtifacts@1
            displayName: Publish NuGet cache contents
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/artifacts/NugetPackageRootContents'
              ArtifactName: 'NuGetPackageContents SourceBuild_Linux'
              publishLocation: Container
            continueOnError: true
            condition: failed()
