<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <FSCoreVersion>4.4.1.0</FSCoreVersion>
    <OutputPath>$(MSBuildThisFileDirectory)../BuildFromSource/$(Configuration)/$(TargetFramework)\bin</OutputPath>

    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <EnableDefaultEmbeddedResourceItems>false</EnableDefaultEmbeddedResourceItems>
    <DefineConstants>$(DefineConstants);BUILD_FROM_SOURCE</DefineConstants>
    <OtherFlags>$(OtherFlags) --nocopyfsharpcore</OtherFlags>
  </PropertyGroup>

  <PropertyGroup>
    <TargetDotnetProfile  Condition="'$(TargetFramework)' == 'netstandard1.6' ">coreclr</TargetDotnetProfile>
    <TargetDotnetProfile  Condition="'$(TargetFramework)' == 'netframework' ">net40</TargetDotnetProfile>
  </PropertyGroup>

  <Import Project="FSharpSource.Profiles.targets" />

  <Target Name="CopyAndSubstituteTextFiles" 
          BeforeTargets="AfterCompile" AfterTargets="CoreCompile"
          Inputs="@(CopyAndSubstituteText)"
          Outputs="@(CopyAndSubstituteText->'$(OutDir)%(TargetFilename)')" >

    <PropertyGroup>
      <FileText>
        $([System.Text.RegularExpressions.Regex]::Replace($([System.IO.File]::ReadAllText("%(CopyAndSubstituteText.FullPath)")), "%(CopyAndSubstituteText.Pattern1)", "%(CopyAndSubstituteText.Replacement1)"))
      </FileText>

      <FileText Condition = "'%(CopyAndSubstituteText.Pattern2)' != ''">
        $([System.Text.RegularExpressions.Regex]::Replace($(FileText), "%(CopyAndSubstituteText.Pattern2)", "%(CopyAndSubstituteText.Replacement2)"))
      </FileText>
    </PropertyGroup>
    <WriteLinesToFile File="$(OutDir)%(CopyAndSubstituteText.TargetFilename)" Lines="$(FileText)" Overwrite="true" />
  </Target>

  <!--
  =========================================================================
    Build FsSrGen files.
  =========================================================================
  -->
  <Target Name="CallFsSrGen"
          Inputs="@(FsSrGen)"
          Outputs="@(FsSrGen->'$(IntermediateOutputPath)%(Filename).fs');@(FsSrGen->'$(IntermediateOutputPath)%(Filename).resx')"
          Condition="'@(FsSrGen)' != ''">

    <PropertyGroup>
        <DotNetExePath>$(MSBuildThisFileDirectory)../Tools/dotnet20/dotnet.exe</DotNetExePath>
        <DotNetExePath Condition="!Exists($(DotNetExe))">$(MSBuildBinPath)/../../dotnet.exe</DotNetExePath>
        <FsSrGenPath>$(MSBuildThisFileDirectory)../Tools/fssrgen/fssrgen.dll</FsSrGenPath>
    </PropertyGroup>

    <!-- Create the output directory in case it doesn't exist yet -->
    <MakeDir Directories="$(IntermediateOutputPath)" />
    <!-- Run the tool -->
    <Exec Command="&quot;$(DotNetExePath)&quot; &quot;$(FsSrGenPath)&quot; &quot;%(FsSrGen.FullPath)&quot; &quot;$(IntermediateOutputPath)%(FsSrGen.Filename).fs&quot;  &quot;$(IntermediateOutputPath)%(FsSrGen.Filename).resx&quot; $(FsSrGenProjectName)" />
  </Target>

  <Target Name="ProcessFsSrGen"
          DependsOnTargets="CallFsSrGen"
          Condition="'@(FsSrGen)'!=''"
          BeforeTargets="CoreResGen">
    <CreateItem Include="$(IntermediateOutputPath)%(FsSrGen.Filename).fs">
      <Output TaskParameter="Include" ItemName="CompileBefore"/>
    </CreateItem>
    <CreateItem Include="$(IntermediateOutputPath)%(FsSrGen.Filename).resx" AdditionalMetadata="ManifestResourceName=%(FsSrGen.Filename)">
      <Output TaskParameter="Include" ItemName="EmbeddedResource"/>
    </CreateItem>
    <CreateItem Include="$(IntermediateOutputPath)%(FsSrGen.Filename).fs">
      <Output TaskParameter="Include" ItemName="FileWrites"/>
    </CreateItem>
    <CreateItem Include="$(IntermediateOutputPath)%(FsSrGen.Filename).resx">
      <Output TaskParameter="Include" ItemName="FileWrites"/>
    </CreateItem>
  </Target>

</Project>
