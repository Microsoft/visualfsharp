<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <FSharpSourcesRoot>$(MSBuildProjectDirectory)\..\..</FSharpSourcesRoot>
    <ProjectLanguage>FSharp</ProjectLanguage>
    <BuildWith Condition=" '$(Configuration)' == 'Proto' ">LKG</BuildWith>
  </PropertyGroup>

  <Import Project="$(FSharpSourcesRoot)\FSharpSource.Settings.targets" />

  <PropertyGroup>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{DED3BBD7-53F4-428A-8C9F-27968E768605}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AssemblyName>FSharp.Core</AssemblyName>
    <DefineConstants>FSHARP_CORE;$(DefineConstants)</DefineConstants>
    <NoWarn>$(NoWarn);45;55;62;75;1204</NoWarn>
    <BaseAddress>0x05000000</BaseAddress>
    <CompilingFsLib>true</CompilingFsLib>
    <AllowCrossTargeting>true</AllowCrossTargeting>
    <FX_NO_LOADER>true</FX_NO_LOADER>
    <OtherFlags>$(OtherFlags) --warnon:1182 --compiling-fslib --maxerrors:20 --extraoptimizationloops:1 --compiling-fslib-40</OtherFlags>
  </PropertyGroup>

  <!-- Nuget packaging configuration -->
  <ItemGroup>
    <PackageNuspec Include="Testing.FSharp.Core.nuspec" Condition="'$(TargetDotnetProfile)' == 'coreclr'" />
    <None Include="FSharp.Core.runtimeconfig.json"      Condition="'$(TargetDotnetProfile)' == 'coreclr'" ><CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory></None>
  </ItemGroup>

  <ItemGroup>
    <FilesToLocalize Include="$(OutDir)$(AssemblyName).dll">
      <TranslationFile>$(FSharpSourcesRoot)\..\loc\lcl\{Lang}\$(AssemblyName).dll.lcl</TranslationFile>
      <LciCommentFile>$(FSharpSourcesRoot)\..\loc\lci\$(AssemblyName).dll.lci</LciCommentFile>
      <HasLceComments>false</HasLceComments>
      <InProject>false</InProject>
    </FilesToLocalize>
  </ItemGroup>

  <ItemGroup>
    <CustomAdditionalCompileInputs Include="$(FSharpSourcesRoot)\..\Proto\$(ProtoFlavour)\bin\fsc-proto.exe">
      <Visible>false</Visible>
    </CustomAdditionalCompileInputs>
  </ItemGroup>

  <Import Project="FSharp.Core.Sources.proj" />

  <ItemGroup Condition="'$(TargetDotnetProfile)' != 'coreclr'">
    <Reference Include="mscorlib" />
    <Reference Include="System" />
    <Reference Include="System.Numerics">
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetDotnetProfile)' == 'coreclr'">
    <None Include="project.json" />
  </ItemGroup>

  <!-- References -->
  <Import Project="$(FSharpSourcesRoot)\.nuget\NuGet.targets" Condition="Exists('$(FSharpSourcesRoot)\.nuget\NuGet.targets')" />
  <Import Project="$(FSharpSourcesRoot)\FSharpSource.targets" />

  <!-- Hook compilation phase to do custom work -->
  <!-- NOTE: The optdata and sigdata files are no longer needed by the F# compiler (the information is -->
  <!-- integrated as resources into more recent FSharp.Core.dll's. However they are still produced to -->
  <!-- allow older versions of the F# compiler to reference more recent FSharp.Core packages -->
  <Target Name="CopyToBuiltBin" BeforeTargets="AfterCompile" AfterTargets="CoreCompile" >
    <ItemGroup>
      <BuiltProjectOutputGroupKeyOutput Include="$(IntermediateOutputPath)\FSharp.Core.sigdata" />
      <BuiltProjectOutputGroupKeyOutput Include="$(IntermediateOutputPath)\FSharp.Core.optdata" />
    </ItemGroup>
    <Copy SourceFiles="$(IntermediateOutputPath)\FSharp.Core.sigdata" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
    <Copy SourceFiles="$(IntermediateOutputPath)\FSharp.Core.optdata" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="GatherBinariesToBeSigned" AfterTargets="Localize" Condition="'$(UseGatherBinaries)' == 'true'">
    <ItemGroup>
      <BinariesToBeSigned Include="$(OutDir)$(AssemblyName).dll" />
      <BinariesToBeSigned Include="$(OutDir)localize\**\$(AssemblyName).resources.dll" />
      <FilesToSign Include="@(BinariesToBeSigned)">
         <Authenticode>Microsoft</Authenticode>
         <StrongName>StrongName</StrongName>
      </FilesToSign>
    </ItemGroup>
  </Target>

  <Target Name="nugetpack"
          DependsOnTargets="CreateOrUpdateBuildVersionFile"
          AfterTargets="Build"
          Condition="'$(TargetDotnetProfile)' == 'coreclr' "
          Inputs="@(PackageNuspec)" 
          Outputs='$(FSharpSourcesRoot)\..\$(Configuration)\artifacts\"%(PackageNuspec.Filename)).nupkg'>

    <PropertyGroup>
      <PackageProperties>-prop "licenseUrl=$(PackageLicenceUrl)" -prop "version=$(FSharpCore42TargetVersion)" -prop "authors=$(PackageAuthors)" -prop "projectUrl=$(PackageProjectUrl)" -prop "tags=$(PackageTags)"</PackageProperties>
    </PropertyGroup>

    <MakeDir Directories="$(FSharpSourcesRoot)\..\artifacts" />
    <SetEnvVar Name="NUGET_PACKAGES" Value="$(NUGET_PACKAGES)" />
    <Exec Command='$(FSharpSourcesRoot)\..\.nuget\nuget.exe pack @(PackageNuspec) -BasePath $(OutputPath.TrimEnd("\")) -ExcludeEmptyDirectories $(PackageProperties) -OutputDirectory $(FSharpSourcesRoot)\..\artifacts' />
  </Target>

</Project>
